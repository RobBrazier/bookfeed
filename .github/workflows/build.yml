name: Build & Deploy
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      deploy: ${{ steps.changes.outputs.deploy }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
      - name: Check if deployment is required
        id: changes
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            BASE="${{ github.event.pull_request.base.sha }}"
          else
            BASE="HEAD~1"
          fi

          PATHS="assets/ cmd/ internal/ go.mod go.sum Dockerfile config/ .kamal/ package.json package-lock.json"

          if git diff --name-only $BASE HEAD | grep -qE "^($(echo $PATHS | tr ' ' '|'))"; then
            echo "app files changed - flagged for deployment"
            echo "deploy=true" >> $GITHUB_OUTPUT
          else
            echo "no app files changed - skipping deployment"
            echo "deploy=false" >> $GITHUB_OUTPUT
          fi
  lint:
    runs-on: ${{ vars.ACTION_RUNNER || 'ubuntu-latest' }}
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3.2.0
      - uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          cache: "npm"
      - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
      - run: just install generate
      - uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9 # v8.0.0

  build:
    runs-on: ${{ vars.ACTION_RUNNER || 'ubuntu-latest' }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3.2.0
      - uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          cache: "npm"
      - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
      - name: Build
        run: just install build
      - name: Test
        run: just test

  deploy:
    needs:
      - changes
      - lint
      - build
    # only deploy on main branch if:
    # 1. there are application code changes
    # 2. the pipeline is manually triggered
    if: github.ref_name == 'main' && (needs.changes.outputs.deploy == 'true' || github.event_name == 'workflow_dispatch')
    runs-on: ${{ vars.ACTION_RUNNER || 'ubuntu-latest' }}
    environment:
      name: prod
      url: ${{ steps.deploy.outputs.url }}
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: ruby/setup-ruby@0481980f17b760ef6bca5e8c55809102a0af1e5a # v1.263.0
        with:
          ruby-version: "3.4.6"
      - run: |
          gem install kamal
      - uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      - uses: crazy-max/ghaction-github-runtime@3cb05d89e1f492524af3d41a1c98c83bc3025124 # v3.1.0
      - uses: webfactory/ssh-agent@a6f90b1f127823b31d4d4a8d96047790581349bd # v0.9.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          log-public-key: false
      - run: kamal deploy
        env:
          SERVER_IPS: ${{ secrets.SERVER_IPS }}
          PROXY_HOSTS: ${{ vars.PROXY_HOSTS }}
          HARDCOVER_TOKEN: ${{ secrets.HARDCOVER_TOKEN }}
          KAMAL_REGISTRY_USERNAME: ${{ github.actor }}
          KAMAL_REGISTRY_PASSWORD: ${{ github.token }}
      - id: deploy
        env:
          PROXY_HOSTS: ${{ vars.PROXY_HOSTS }}
        run: |
          hosts=($PROXY_HOSTS)
          echo "url=https://${hosts[0]}" >> $GITHUB_OUTPUT
