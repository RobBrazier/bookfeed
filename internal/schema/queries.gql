fragment Book on books {
  title
  id
  slug
  releaseDate: release_date
  usersCount: users_count
  description
  contributions {
    author {
      name
    }
  }
  compilation
  image {
    url
    width
    height
    ratio
  }
  bookSeries: book_series(
    where: {
      _or: [
        {featured: {_eq: true}},
        {series: {slug: {_in: $slug}}}
      ]
    }
  ) {
    series {
      name
      slug
    }
    position
  }
}

query RecentReleases($now: date, $lastMonth: date, $slug: [String!] = []) {
  # @genqlient(flatten: true)
  books(
    order_by: {users_count: desc_nulls_last}
    where: {
      release_date: {_lte: $now, _gte: $lastMonth}
    }
    limit: 25
  ) {
    ...Book
  }
}

query RecentSeriesReleases($now: date, $lastMonth: date, $slug: [String!], $compilations: Boolean = false) {
  series(where: { slug: {_in: $slug} }) {
    name
    slug
  }
  bookSeries: book_series(
    where: {
      series: {
        slug: {_in: $slug}
      },
      book: {
        release_date: {_lte: $now, _gte: $lastMonth},
        book_mappings: {id: {_is_null: false}}
        compilation: {
          _in: [$compilations, false]
        }
      }
    }
    order_by: {book: {release_date: desc_nulls_last}}
    limit: 25
  ) {
    series {
      name
    }
    # @genqlient(flatten: true)
    book {
      ...Book
    }
  }
}

query RecentAuthorReleases($now: date, $lastMonth: date, $slug: [String!], $compilations: Boolean = false) {
  contributions(
    where: {
      author: {
        slug: {_in: $slug}
      },
      book: {
        release_date: {_lte: $now, _gte: $lastMonth},
        book_mappings: {id: {_is_null: false}},
        compilation: {
          _in: [$compilations, false]
        }
      }
    }
    order_by: {book: {release_date: desc_nulls_last}}
    limit: 25
  ) {
    author {
      name
    }
    # @genqlient(flatten: true)
    book {
      ...Book
    }
  }
}

query UserInterests($username: citext, $earliest: date) {
  userBooks: user_books(
    where: { 
      user: { username: {_eq: $username}}, 
      status_id: {_eq: 3}, # status.READ
      last_read_date: { _gt: $earliest}
    }
  ) {
    book {
      slug
      contributions(
        where: {
          contribution: {_is_null: true}, # only get Authors
          author: {death_date: {_is_null: true}}
        }
        limit: 1
      ) {
        author {
          slug
          name
        }
      }
      bookSeries: book_series(
        where: {
          featured: {_eq: true},
          series: {
            _or: [ # skip completed Series
              {is_completed: {_eq: false}},
              {is_completed: {_is_null: true}}
            ]
          }
        }
        limit: 1
      ) {
        series {
          name
          slug
        }
      }
    }
  }
}
