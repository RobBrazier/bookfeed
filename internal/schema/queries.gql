fragment Book on books {
  id
  slug
  title
  releaseDate: release_date
  headline
  description
  # @genqlient(bind: "[]github.com/RobBrazier/bookfeed/internal/hardcover.BookGenre")
  genres: cached_tags(path: "Genre")
  contributions {
    author {
      name
    }
  }
  compilation
  # @genqlient(bind: "github.com/RobBrazier/bookfeed/internal/hardcover.BookImage")
  image: cached_image
  # @genqlient(bind: "github.com/RobBrazier/bookfeed/internal/hardcover.BookFeaturedSeries")
  featuredSeries: cached_featured_series
}

query RecentReleases($to: date, $from: date) {
  # @genqlient(flatten: true)
  books(
    order_by: {users_count: desc_nulls_last}
    where: {
      release_date: {_lte: $to, _gte: $from}
    }
    limit: 25
  ) {
    ...Book
  }
}

query RecentSeriesReleases($to: date, $from: date, $slug: [String!], $compilations: Boolean = false) {
  series(where: { slug: {_in: $slug} }) {
    name
    slug
  }
  bookSeries: book_series(
    where: {
      series: {
        slug: {_in: $slug}
      },
      book: {
        release_date: {_lte: $to, _gte: $from},
        book_mappings: {id: {_is_null: false}}
        compilation: {
          _in: [$compilations, false]
        }
      }
    }
    order_by: {book: {release_date: desc_nulls_last}}
    limit: 25
  ) {
    series {
      slug
    }
    # @genqlient(flatten: true)
    book {
      ...Book
    }
  }
}

query RecentAuthorReleases($to: date, $from: date, $slug: [String!], $compilations: Boolean = false) {
  authors(where: {slug: {_in: $slug}}) {
    name
    slug
    contributions(
      where: {
        contribution: {_is_null: true}, # only get Authors
        book: {
          release_date: {_lte: $to, _gte: $from},
          book_mappings: {id: {_is_null: false}},
          compilation: {
            _in: [$compilations, false]
          }
        }
      }
      order_by: {book: {release_date: desc_nulls_last}}
      limit: 25
    ) {
      author {
        name
      }
      # @genqlient(flatten: true)
      book {
        ...Book
      }
    }
  }
}

query UserInterests($username: citext, $from: date) {
  users(where: {username: {_eq: $username}}) {
    username
  }
  userBooks: user_books(
    where: { 
      user: { username: {_eq: $username}}, 
      status_id: {_eq: 3}, # status.READ
      last_read_date: { _gt: $from}
    }
  ) {
    book {
      slug
      # @genqlient(bind: "[]github.com/RobBrazier/bookfeed/internal/hardcover.BookContributor")
      contributors: cached_contributors
      # @genqlient(bind: "github.com/RobBrazier/bookfeed/internal/hardcover.BookFeaturedSeries")
      featuredSeries: cached_featured_series
    }
  }
}
