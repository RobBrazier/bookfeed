version: "3"

dotenv:
  - .env

env:
  CGO_ENABLED: 0

vars:
  RUN_COMMAND: "{{ if .SECRETS_COMMAND }}{{ .SECRETS_COMMAND }} -- {{end}}"
  NAME: bookfeed
  MAIN_PATH: '{{ joinPath "cmd" .NAME "main.go" }}'

tasks:
  download-schema:
    cmd: 'go run github.com/benweint/gquil/cmd/gquil@latest introspection generate-sdl https://api.hardcover.app/v1/graphql -H "Authorization: {{ .HARDCOVER_TOKEN }}" > internal/schema/schema.gql'
    requires:
      vars: [HARDCOVER_TOKEN]

  install:
    cmds:
      - cmd: npm install
      - cmd: npx lefthook install
        ignore_error: true
    sources:
      - package.json
    generates:
      - node_modules/**/*

  fmt:
    cmd: golangci-lint fmt {{ .CLI_ARGS }}

  lint:
    cmd: golangci-lint run --fix {{ .CLI_ARGS }}

  clean:
    cmd: rm -r {{ .ROOT_DIR }}/dist
    status:
      - "! test -d {{ .ROOT_DIR }}/dist"

  generate:
    deps:
      - install
    cmd: go generate ./...

  build:
    deps:
      - generate
    vars:
      OUT: '{{ .OUT | default (joinPath "dist" .NAME) }}'
    cmd: go build -o {{ .OUT }} {{ .MAIN_PATH }}

  run:
    cmd: "{{ .RUN_COMMAND }}go run {{ .MAIN_PATH }}"

  dev:
    vars:
      AIR_CMD:
        sh: which air 2>/dev/null || echo "go run github.com/air-verse/air@latest"
    cmd: "{{ .RUN_COMMAND }}{{ .AIR_CMD }}"

  test:
    cmd: go test ./... -v

  templui:
    cmd: go run github.com/templui/templui/cmd/templui@latest {{.CLI_ARGS}}

  templui:add:
    requires:
      vars:
        - NAME
    cmds:
      - task: templui
        vars:
          CLI_ARGS: "add {{ .NAME }}"

  templui:list:
    cmds:
      - task: templui
        vars:
          CLI_ARGS: "list"

  templui:update:
    vars:
      COMPONENTS:
        sh: "ls internal/view/components | xargs echo"
    cmds:
      - task: templui
        vars:
          CLI_ARGS: "-f add {{ .COMPONENTS }}"
